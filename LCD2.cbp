#include <iostream>
using namespace std;

#define MAX_LIST 10
int user_list[MAX_LIST];

//sifts for the lowest (greatest fraction) number
int filter (int lowerMass) {
// int lowerMass=0;
	int i,x,r,temp,t,adj;
        for (i=0; i<x; i++) {
            if (user_list[i]>r && user_list[i]>temp){
                temp=user_list[i];
            }
            else{
                temp=r;
//                cout << "temporary is ">>temp<< endl;
                cout << "temporary is " << temp << endl;
            }

        }

        for (i=0; i<x; i++) {
            if (user_list[i]>temp && user_list[i]<adj){
                adj=user_list[i];
                cout << "Adj is "<< adj<< endl;
            }
        }
	return 0;
    }


//int LCD(void) {
//	int i;
//    	for (i=0; i<x-1; i++) {
//       		if (max(user_list[i],user_list[i+1])% min(user_list[i],user_list[i+1])==0) {
//       	 		lowerMass=max(user_list[i],user_list[i+1]);
//       	     		cout << lowerMass<< endl;
//       	 	}
//       	 	else {
//       	     		filter(lowerMass);
//       	 	}
//	}
//}

int main(int argc, char *argv[]) {
	int lowerMass=0;

//    //intro
//    cout<< "How many numbers would you like to test?"<< endl;
//#    int x;
//    cin>>x;
//    cout << "I understand that you would like to test "<< x<<  " numbers."<< endl;
//    if (x<=1){
//        cout << "That makes no sense, you dummy. :P"<< endl;
//    }

    //user input system
    int x=2;
    int user_list [x];
    int i=0;
    int j;

// for (i=x; i>0; i--) {

    while(1) {
	cout << "What denominator would you like to add to the list to test?"<< endl;
        cin>>j;
	if (j==0)
		break;
	user_list[i++] = j;
//        cout << "I understand that you would like to add "<< user_list[(x-i)]<< " to the list."<< endl;
    }

    //Prints back numbers that have been input
    for (i=0; i<x; i++){
        cout  << "Your list is: "<< user_list[i]<< ", ";
    }
    cout << ""<< endl;

    //algorithm to test
    int hyp = 0; //modulo factor


    //upkick

    //function that multiplies up
    //downkick

    int temp; //lowest array value
    int adj; //second lowest array value, used to find mult from temp
    int mult; //the factor between the temp and the adj, used to factor up all array values


    //print results, because apparently printing out an array is more than one line of code long!??!?!?
}
